<template>
    <div class="page-designer">
        <div class="designer-workspace">
            <div class="designer-col col-left" v-if="isDesignerMode">
                <div class="col-title">
                    <span>组件列表</span>
                </div>
                <div class="designer-widget">
                    <a-collapse defaultActiveKey="Basic" :bordered="false">
                        <a-collapse-panel :header="depositoryWidgetCategory[widgetGroupName]" :key="widgetGroupName" v-for="(widgetGroup,widgetGroupName) in depositoryWidgetList">
                            <div class="widget-item" :key="widgetItem.name" v-for="widgetItem in widgetGroup" @click="onAddWidgetToDesigner(widgetItem)">
                                <a-tooltip placement="right" title="点击可添加到设计器">
                                    <img :src="widgetItem.preview"/>
                                </a-tooltip>
                                <span>{{widgetItem.title}}</span>
                            </div>
                        </a-collapse-panel>
                    </a-collapse>
                </div>
            </div>
            <div class="designer-col col-middle">
                <div class="col-middle-content">
                    <div class="col-title">
                        <span>首页</span>
                        <span :style="{color:isDesignerMode ? '#faad14' : '#999'}">{{isDesignerMode ? '编辑中' : '已锁定'}}</span>
                    </div>
                    <div class="page-preview" ref="pagePreview">
                        <vuescroll :ops="vueScrollOps">
                        <draggable class="preview-widget-list" id="preview-widget-list" tag="ul" v-model="previewWidgetList" v-bind="dragOptions" :move="onPreviewWidgetMove" @start="isDragging=true" @end="isDragging=false">
                            <transition-group type="transition" :name="'flip-list'">
                                <li :class="'preview-widget preview-widget-index'+pWidgetIndex+' '+((previewWidgetSelected == pWidgetIndex) ? 'preview-widget-selected' : '')" v-for="(pWidgetItem,pWidgetIndex) in previewWidgetList" :key="pWidgetItem.order" :data-id="pWidgetIndex" @click="onSelectPreviewWidget"/>
                            </transition-group>
                        </draggable>
                        </vuescroll>
                    </div>
                </div>
                <div class="col-middle-footer">
                    <div class="designer-btns">
                        <a-tooltip v-if="!isDesignerMode" placement="bottom" title="点击进入设计模式以定义该页面">
                            <a-button v-if="!isDesignerMode" class="designer-btn designer-btn-edit" icon="edit"
                                      type="primary" shape="circle" @click="onDesignerMode(true)"/>
                        </a-tooltip>
                        <a-tooltip v-if="isDesignerMode" placement="bottom" title="系统将不会保存你做的任何更改">
                            <a-button v-if="isDesignerMode" class="designer-btn designer-btn-cancel" icon="close"
                                      @click="onDesignerMode(false)">取消
                            </a-button>
                        </a-tooltip>
                        <a-tooltip v-if="isDesignerMode" placement="bottom" title="保存并生成新的页面布局和数据">
                            <a-button v-if="isDesignerMode" class="designer-btn designer-btn-save" icon="check"
                                      type="primary" @click="onSavePageData">保存布局/数据
                            </a-button>
                        </a-tooltip>
                    </div>
                </div>
            </div>
            <div class="designer-col col-right" v-if="isDesignerMode">
                <div class="col-title">
                    <span>组件属性</span>
                    <img :src="previewScreenshot"/>
                </div>
                <div class="widget-attribute"></div>
                <div class="designer-action">
                    <ul class="designer-tips">
                        <li>拖动预览区域的组件可进行排序</li>
                        <li>选中预览区域的组件可更改属性</li>
                        <li>选择画布可更改页面属性</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</template>

<script>
    import {category,widgets} from '@/components/designer/widget'
    import draggable from "vuedraggable";
    import vuescroll from 'vuescroll';
    Object.assign(widgets,{
        draggable:draggable,
        vuescroll:vuescroll
    })
    export default {
        name: "index",
        components: widgets,
        data() {
            return {
                isDragging: false,
                isDesignerMode: false,
                depositoryWidgetCategory: {
                    'Basic': '基础组件',
                    'Goods': '商品组件',
                    'Promotion': '活动组件',
                },
                depositoryWidgetList: category,
                previewWidgetList: [],
                previewWidgetSelected: null,
                previewWidgetSectData: {},
                previewScreenshot: '',
                vueScrollOps: {
                    bar: {
                        background: '#999',
                        keepShow: false,
                        size: '5px',
                        minSize: 0.2
                    },
                }
            }
        },
        created() {
            this.$store.dispatch("common/setFullScreen", true);
        },
        computed: {
            dragOptions() {
                return {
                    animation: 200,
                    group: "description",
                    disabled: !this.isDesignerMode,
                    ghostClass: "ghost"
                };
            },
        },
        watch: {
            previewWidgetList: function (val, oldVal) {
                let self = this;
                self.$nextTick(function () {
                    val.map(function (item,index) {
                        if(item.instance && item.instance != undefined) item.instance.$destroy();
                        document.querySelector('.preview-widget-index' + index).innerHTML = '';
                        Object.assign(item,{
                            instance:self.$utils.widget.mount(widgets[item.name], {
                                msg: '基础轮播组件'
                            }, '.preview-widget-index' + index)
                        })
                    });
                });
            }
        },
        methods: {
            onAddWidgetToDesigner(widgetItem) {
                this.previewWidgetList.push({name:widgetItem.name,order:this.previewWidgetList.length,fixed:false,info:widgetItem});
            },
            onSavePageData() {
                // this.isDesignerMode = false;
                // console.log(VM)
                // var WidgetTabBar = widgets['WidgetTabBar'];
                // new WidgetTabBar().$mount('.page-preview');
                // this.$utils.widget.mount(widgets['WidgetTabBar'],{
                //     msg: 'hello world'
                // },'.page-preview');
                // console.log(WidgetTabBar);
                let self = this;
                self.$utils.common.MakeDomScreenshot(this.$refs.pagePreview).then(function (res) {
                    self.previewScreenshot = res.toDataURL('image/png');
                }).catch(function (err) {
                    console.warn(err)
                });

            },
            onDesignerMode(state) {
                let self = this;
                if (state) {
                    self.$confirm({
                        title: '确定要进入页面编辑模式吗?',
                        content: '操作有一定风险，请谨慎选择，注意正确配置页面并保存数据',
                        okText: '进入编辑模式',
                        cancelText: '取消',
                        onOk() {
                            self.isDesignerMode = true;
                        },
                        onCancel() {
                            self.isDesignerMode = false;
                            self.previewWidgetSelected = null;
                        }
                    });
                } else {
                    self.isDesignerMode = false;
                    self.previewWidgetSelected = null;
                }
            },
            onSelectPreviewWidget(e) {
                let currentId = e.srcElement.dataset.id;
                if (this.isDesignerMode) {
                    this.previewWidgetSelected = currentId;
                }
                let props = {};
                let selectedWidget = this.previewWidgetList[currentId];
                if(selectedWidget && selectedWidget.instance != undefined) {
                    // props = selectedWidget.instance.$options.props;
                    props = selectedWidget.instance.$options.propsData;
                }
                this.previewWidgetSectData = props;
            },
            onPreviewWidgetMove({ relatedContext, draggedContext }) {
                this.previewWidgetSelected = null;
                const relatedElement = relatedContext.element;
                const draggedElement = draggedContext.element;
                return (
                    (!relatedElement || !relatedElement.fixed) && !draggedElement.fixed
                );
            }
        }
    }
</script>

<style scoped>
    .page-designer {
        position: relative;
        height: 100%;
        background: #f0f2f5 url("../../../assets/images/special-designer-background.png");
    }
    .designer-workspace {
        position: relative;
        min-width: 1060px;
        height: 100%;
        width: 100%;
        overflow-x: hidden;
        z-index: 900;
    }
    .designer-workspace .designer-col {
        display: block;
        background: #fff;
    }
    .designer-workspace .designer-col .col-title {
        height: 50px;
        border-bottom: 1px solid #eee;
        background: #fff;
        z-index: 900;
    }
    .designer-workspace .designer-col .col-title span:first-child{
        font-size: 15px;
        line-height: 50px;
        padding: 0 15px;
        font-weight: bolder;
    }

    .designer-workspace .col-left, .designer-workspace .col-middle {
        width: 360px;
        float: left;
        box-sizing: content-box;
    }
    .designer-workspace .col-left {
        border-left: 0;
        width: 430px;
        height: 100%;
        box-shadow: 0px 0px 10px #666;
        min-width: 232px;
        animation: bounceInLeft .5s alternate cubic-bezier(0.215, 0.610, 0.355, 1.000)
    }
    .designer-workspace .col-middle {
        position: absolute;
        left: 50%;
        top: 50%;
        margin-left: -180px;
        margin-top: -400px;
        background: none;
    }
    .designer-workspace .col-right {
        width: 430px;
        height: 100%;
        float: right;
        box-shadow: 0px 0px 10px #666;
        position: relative;
        animation: bounceInRight .5s alternate cubic-bezier(0.215, 0.610, 0.355, 1.000)
    }
    .designer-workspace .col-middle .col-title>>>.anticon {
        float: right;
        line-height: 50px;
        padding: 0 20px;
        color: #007dff;
        cursor: pointer;
    }

    .designer-workspace .col-middle .col-middle-content {
        background: #ffffff;
        box-shadow: 0px 0px 20px #999;

    }
    .designer-workspace .col-middle .col-middle-content .col-title span:last-child{
        font-size: 12px;
        float: right;
        line-height: 50px;
        padding-right: 10px;
        color: #999;
    }
    .designer-workspace .col-middle .page-preview {
        width: 360px;
        height: 640px;
        overflow-y: auto;
        background: #f0f2f5;
    }
    .designer-workspace .col-middle .page-preview .preview-widget-list {
        margin: 0;
        padding: 0;
        list-style: none;
    }

    .designer-workspace .col-middle .page-preview .preview-widget {
        height: auto;
        /*background: #eee;*/
        border: 1px dashed transparent;
        padding: 5px;
        margin-bottom: -5px;
    }
    .designer-workspace .col-middle .page-preview .preview-widget-selected {
        border-color: #007dff;
        box-sizing: border-box;
    }

    .designer-workspace .col-left .designer-widget {
        height: calc(100% - 50px);
        overflow-y: auto;
        background: #fff;
    }

    .designer-workspace .col-left .designer-widget .widget-item {
        position: relative;
        background: #fff;
        width: 200px;
        margin: 5px;
        float: left;
        cursor: pointer;
    }
    .designer-workspace .col-left .designer-widget .widget-item:last-child {
        margin-bottom: 0;
    }
    .designer-workspace .col-left .designer-widget .widget-item img{
        width: 200px;
        height: 120px;
    }
    .designer-workspace .col-left .designer-widget .widget-item span{
        position: absolute;
        bottom: 0;
        width: 100%;
        line-height: 30px;
        padding: 0 10px;
        display: block;
        font-size: 12px;
        background: rgba(0,0,0,.3);
        color: #fff;
    }
    .designer-workspace .col-right .designer-action {
        padding: 20px 30px;
        position: absolute;
        width: 100%;
        text-align: center;
        bottom: 0;
        background: #f0f2f5;
        border-top: 1px solid #d5dfea;
    }
    .designer-workspace .col-right .designer-action .designer-tips {
        list-style: decimal;
        text-align: left;
        font-size: 12px;
        padding-left: 15px;
        color: #999;
        margin: 0;
    }
    .designer-workspace .col-middle .col-middle-footer {
        margin-top: 30px;
        text-align: center;
        height: 70px;
    }
    .designer-workspace .col-middle .col-middle-footer .designer-btns .designer-btn{
        border-radius: 30px;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, .3);

    }
    .designer-workspace .col-middle .col-middle-footer .designer-btns .designer-btn-edit {
        width: 40px;
        height: 40px;
    }
    .designer-workspace .col-middle .col-middle-footer .designer-btns .designer-btn-cancel {
        margin-right: 10px;
    }
    @keyframes bounceInLeft {
        0% {
            opacity: 0;
            transform: translate3d(-300px, 0, 0);
        }
        100% {
            transform: none;
        }
    }
    @keyframes bounceInRight {
        0% {
            opacity: 0;
            transform: translate3d(700px, 0, 0);
        }
        100% {
            transform: none;
        }
    }
    @media screen and (max-width: 1425px) {
        .designer-workspace .col-left {
            width:220px;
        }
        .designer-workspace .col-middle {
            left: 430px;
        }
    }
</style>