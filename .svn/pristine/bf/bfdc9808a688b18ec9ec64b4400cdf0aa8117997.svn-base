<template>
    <div>
        油站报表
        <div class="margin-bottom">
            <a-select defaultValue="1" style="width: 120px"  @change="handleTimetypeChange">
              <a-select-option value="1">日结时间</a-select-option>
              <a-select-option value="2">自然时间</a-select-option>
            </a-select>
            <a-range-picker style="margin-right:20px" @change="onTimeChange">
              <template slot="dateRender" slot-scope="current">
                <div class="ant-calendar-date" :style="getCurrentStyle(current)">
                  {{current.date()}}
                </div>
              </template>
            </a-range-picker>
            消费类型：
            <a-select :defaultValue="type[0].value" style="width: 120px" @change="handleTypeChange">
              <a-select-option v-for="type in type" :value="type.value" :key="type">{{type.name}}</a-select-option>
            </a-select>
            <a-button type="primary" style="margin:0 20px" @click="getData">确定</a-button>
            <a-button type="primary" @click="Download">导出</a-button>
        </div>
        <a-table :columns="columns" :dataSource="data" :pagination=false>
          <span slot="actions" slot-scope="text, record">
            <a-tooltip placement="top">
              <template slot="title">
                <span>查看</span>
              </template>
              <a-icon type="form"/>
            </a-tooltip> 
          </span>
        </a-table>
        <template>
          <a-pagination :current="current" :total="total" :defaultPageSize='pagesize' @change="onChange"/>
        </template> 
    </div>
</template>
<script>
  const type = [
    {
      value:1,
      name:'油品'
    },{
      value:2,
      name:'非油'
    }
  ]
    const columns = [
        {
          title: '订单编号',
          dataIndex: 'order_sn',
        },
        {
          title: '交易时间',
          dataIndex: 'add_time',
        },
        {
          title: '消费类型',
          dataIndex: 'order_type',
        },
        {
          title: '实际金额',
          dataIndex: 'pay_amount',
        },
        {
          title: '优惠金额',
          dataIndex: 'discount_amount',
        },
        {
          title: '合计',
          dataIndex: 'order_amount',
        },
        {
          title: '操作',
          key: 'actions',
          dataIndex: 'actions',
          scopedSlots: { customRender: 'actions' },
    }];
    const data = [
        {
            num:"2359876543",
            time:'2019/05/20 15:00',
            type:'油品',
            pay:180.00,
            coupon:20.00,
            all:200.00
        }
    ]
    export default {
        data() {
            return {
                data:data,
                columns,
                pagesize:15,
                current:1,
                type,
                total:0
            }
        },
        created() {
          const _this = this;
          const id = _this.$route.params.id;
          _this.id = id;
          _this.getData();
        },
        methods: {
            handleTimetypeChange(value) {
              this.time_type = value;
              console.log(`时间类型 ${value}`);
            },            
            handleTypeChange(value) {
              this.order_type = value;
              console.log(`消费类型 ${value}`);
            },
            onTimeChange(date, dateString) {
              this.time_start = dateString[0];
              this.time_end = dateString[1];
              console.log('开始时间' +  dateString[0]);
              console.log('结束时间' +  dateString[1]);
            },
            getCurrentStyle (current, today) {
              const style = {}
              if (current.date() === 1) {
                style.border = '1px solid #1890ff'
                style.borderRadius = '50%'
              }
              return style
            },
            Download(type) {
              const _this = this;
              const time_type = _this.time_type;
              const time_start = _this.time_start;
              const time_end = _this.time_end;
              const order_type = _this.order_type;
              var token = this.$utils.cookie.get('token') ? this.$utils.cookie.get('token') : this.$utils.common.test.token;
              window.open('http://120.78.200.26/console/bill/countReportStation?' + 'token=' + token +'&time_type=' + time_type + '&time_start=' + time_start + '&time_end=' + time_end + '&station_code=' + this.id + '&order_type=' + order_type + '&is_export=1');
            },
            onChange(current) {
              const _this = this;
              const time_type = _this.time_type;
              const time_start = _this.time_start;
              const time_end = _this.time_end;
              _this.current = current;
              this.$model.bill.getStationList({time_type:time_type,time_start:time_start,time_end:time_end,station_code:this.id,order_type:order_type,page_num:current}).then((response) => {
                  _this.data = response;
              })
            },
            getData(){
              const _this = this;
              const time_type = _this.time_type;
              const time_start = _this.time_start;
              const time_end = _this.time_end;
              const order_type = _this.order_type;
              this.$model.bill.getStationList({time_type:time_type,time_start:time_start,time_end:time_end,station_code:this.id,order_type:order_type}).then((response) => {
                _this.total = response.total;
                _this.data = response.data;
              })
              this.$model.bill.getAreaList({company_code:_this.id}).then((response) => {
                  this.areaData = response.data;
                })
            }
        }
    }
</script>
<style scoped>
.margin-bottom{
	margin-bottom: 30px;
}
</style>